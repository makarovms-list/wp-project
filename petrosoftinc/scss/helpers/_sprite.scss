// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$i-close-1-name: 'i-close-1';
$i-close-1-x: 37px;
$i-close-1-y: 216px;
$i-close-1-offset-x: -37px;
$i-close-1-offset-y: -216px;
$i-close-1-width: 30px;
$i-close-1-height: 30px;
$i-close-1-total-width: 298px;
$i-close-1-total-height: 250px;
$i-close-1-image: '../images/sprite.png';
$i-close-1: (37px, 216px, -37px, -216px, 30px, 30px, 298px, 250px, '../images/sprite.png', 'i-close-1', );
$i-close-2-name: 'i-close-2';
$i-close-2-x: 0px;
$i-close-2-y: 216px;
$i-close-2-offset-x: 0px;
$i-close-2-offset-y: -216px;
$i-close-2-width: 34px;
$i-close-2-height: 34px;
$i-close-2-total-width: 298px;
$i-close-2-total-height: 250px;
$i-close-2-image: '../images/sprite.png';
$i-close-2: (0px, 216px, 0px, -216px, 34px, 34px, 298px, 250px, '../images/sprite.png', 'i-close-2', );
$i-close-3-name: 'i-close-3';
$i-close-3-x: 271px;
$i-close-3-y: 83px;
$i-close-3-offset-x: -271px;
$i-close-3-offset-y: -83px;
$i-close-3-width: 15px;
$i-close-3-height: 15px;
$i-close-3-total-width: 298px;
$i-close-3-total-height: 250px;
$i-close-3-image: '../images/sprite.png';
$i-close-3: (271px, 83px, -271px, -83px, 15px, 15px, 298px, 250px, '../images/sprite.png', 'i-close-3', );
$i-cs-products-name: 'i-cs-products';
$i-cs-products-x: 218px;
$i-cs-products-y: 83px;
$i-cs-products-offset-x: -218px;
$i-cs-products-offset-y: -83px;
$i-cs-products-width: 50px;
$i-cs-products-height: 50px;
$i-cs-products-total-width: 298px;
$i-cs-products-total-height: 250px;
$i-cs-products-image: '../images/sprite.png';
$i-cs-products: (218px, 83px, -218px, -83px, 50px, 50px, 298px, 250px, '../images/sprite.png', 'i-cs-products', );
$i-cs-results-name: 'i-cs-results';
$i-cs-results-x: 218px;
$i-cs-results-y: 136px;
$i-cs-results-offset-x: -218px;
$i-cs-results-offset-y: -136px;
$i-cs-results-width: 50px;
$i-cs-results-height: 50px;
$i-cs-results-total-width: 298px;
$i-cs-results-total-height: 250px;
$i-cs-results-image: '../images/sprite.png';
$i-cs-results: (218px, 136px, -218px, -136px, 50px, 50px, 298px, 250px, '../images/sprite.png', 'i-cs-results', );
$i-h-i-1-name: 'i-h-i-1';
$i-h-i-1-x: 0px;
$i-h-i-1-y: 0px;
$i-h-i-1-offset-x: 0px;
$i-h-i-1-offset-y: 0px;
$i-h-i-1-width: 106px;
$i-h-i-1-height: 105px;
$i-h-i-1-total-width: 298px;
$i-h-i-1-total-height: 250px;
$i-h-i-1-image: '../images/sprite.png';
$i-h-i-1: (0px, 0px, 0px, 0px, 106px, 105px, 298px, 250px, '../images/sprite.png', 'i-h-i-1', );
$i-h-i-2-name: 'i-h-i-2';
$i-h-i-2-x: 109px;
$i-h-i-2-y: 0px;
$i-h-i-2-offset-x: -109px;
$i-h-i-2-offset-y: 0px;
$i-h-i-2-width: 106px;
$i-h-i-2-height: 105px;
$i-h-i-2-total-width: 298px;
$i-h-i-2-total-height: 250px;
$i-h-i-2-image: '../images/sprite.png';
$i-h-i-2: (109px, 0px, -109px, 0px, 106px, 105px, 298px, 250px, '../images/sprite.png', 'i-h-i-2', );
$i-h-i-3-name: 'i-h-i-3';
$i-h-i-3-x: 0px;
$i-h-i-3-y: 108px;
$i-h-i-3-offset-x: 0px;
$i-h-i-3-offset-y: -108px;
$i-h-i-3-width: 106px;
$i-h-i-3-height: 105px;
$i-h-i-3-total-width: 298px;
$i-h-i-3-total-height: 250px;
$i-h-i-3-image: '../images/sprite.png';
$i-h-i-3: (0px, 108px, 0px, -108px, 106px, 105px, 298px, 250px, '../images/sprite.png', 'i-h-i-3', );
$i-h-i-4-name: 'i-h-i-4';
$i-h-i-4-x: 109px;
$i-h-i-4-y: 108px;
$i-h-i-4-offset-x: -109px;
$i-h-i-4-offset-y: -108px;
$i-h-i-4-width: 106px;
$i-h-i-4-height: 105px;
$i-h-i-4-total-width: 298px;
$i-h-i-4-total-height: 250px;
$i-h-i-4-image: '../images/sprite.png';
$i-h-i-4: (109px, 108px, -109px, -108px, 106px, 105px, 298px, 250px, '../images/sprite.png', 'i-h-i-4', );
$i-petrosoft-logo-name: 'i-petrosoft-logo';
$i-petrosoft-logo-x: 218px;
$i-petrosoft-logo-y: 0px;
$i-petrosoft-logo-offset-x: -218px;
$i-petrosoft-logo-offset-y: 0px;
$i-petrosoft-logo-width: 80px;
$i-petrosoft-logo-height: 80px;
$i-petrosoft-logo-total-width: 298px;
$i-petrosoft-logo-total-height: 250px;
$i-petrosoft-logo-image: '../images/sprite.png';
$i-petrosoft-logo: (218px, 0px, -218px, 0px, 80px, 80px, 298px, 250px, '../images/sprite.png', 'i-petrosoft-logo', );
$spritesheet-width: 298px;
$spritesheet-height: 250px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($i-close-1, $i-close-2, $i-close-3, $i-cs-products, $i-cs-results, $i-h-i-1, $i-h-i-2, $i-h-i-3, $i-h-i-4, $i-petrosoft-logo, );
$spritesheet: (298px, 250px, '../images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
